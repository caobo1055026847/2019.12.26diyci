1.git使用
git config --global  user.email "邮箱"
――――――
git config --global  user.name  "用户名"
――――――
git config --list  查看当前的配置信息
――――――
git init  初始化git仓库,使用git来管理项目
――――――――
git status 查看当前git仓库的状态
――――――――――
git add  文件名称  把工作目录中的文件添加到暂存区中
――――――――――
git add .  把工作目录中所有未跟踪的和修改后的而文件添加到暂存区中
――――――――――
git rm --cached 自定义文件名称  把暂存区中的文件删除的意思
――――――――――――
git checkout 文件名称 从暂存区恢复文件到工作目录
――――――――――――――――――
git commit -m 说明信息  把暂存区内容提交本地git仓库
――――――――――――――
git log 查看提交记录,但只能查看当前版本之前的提交记录
――――――――――――――――
git reset --hard 提交id 从git仓库中恢复到工作目录
――――――――――――――――
git reflog 查看所有的提交记录,以及恢复记录
――――――――――――――――――――――――――
git branch  查看所有的分支
――――――――――――――――
git branch 分支名称自定义  创建分支
――――――――――
git checkout 分支名称   切换分支
――――――――――――――――
git merge 分支名称 合并分支
――――――――――――――――――
git branch -d 分支名称 删除分支(前提是已经合并了)
――――――――――――――
git branch -D 分支名称 强制删除分支(即使没有合并一样删除)
――――――――――――――――

――2.忽略文件
.gitignore 自动忽略该文件中的文件
――――――――――――――
――3.使用express生成器(脚手架)构建项目
npm install express-generator -g  安装生成器工具
――――――――――――――――――――――――――――――――――――――――――――――――――――
命令行进入到生成的项目,目录执行
――――――――――――――――――――――――――――――――――――――――――――――――
express 项目名称自定义 生成express 项目
――――――――――――――――――――――――――――――――――――――――――――――――――――
cd 项目名称  在命令行进入项目的目录
―――――――――――――――――――――――――――――――――――――――――――― 
npm install 安装项目中依赖的包(package.json)
――――――――――――――――――――――――――――――――――――――――――――
npm start 启动项目,端口默认使用3000
――――――――――――――
使用浏览器访问 http://127.0.0.1:3000
――――――――――――――――――――――――――
npm cache clean --force 清除npm缓存(如果npm install出问题)
――――――――――――――――――――――――――――

























































